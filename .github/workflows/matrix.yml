name: Create release from tag

#on:
#  push:
#    branches:
#      - testaction

on:
  push:
    tags:
      - 'v*'

jobs:
  get_version:
    name: Get version tag
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
        - name: Get the tag string (cleaned)
          id: get_version
          run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
        
        - name: Echo the tag (for debugging)
          run: echo ${{ steps.get_version.outputs.VERSION }}

  create_builds:
    name: Build, Test & Publish
    needs: get_version
    runs-on: ubuntu-latest
    strategy:
      matrix:
          win-version: [x64, x86]
    steps:
        - name: Create a file
          run: echo ${{ matrix.win-version }} > my_file${{ matrix.win-version }}.txt
        
        - name: Upload multiple artifacts via multiple jobs
          uses: actions/upload-artifact@v2
          with:
              name: MXFInspect-${{ needs.get_version.outputs.version }}-win${{ matrix.win-version }}
              path: ${{ github.workspace }}

        - name: Show Files
          run: ls -lr
  
  do_release:
      name: Create release
      needs: [get_version, create_builds]
      runs-on: ubuntu-latest
      env: 
        VERSION: "${{ needs.get_version.outputs.version }}"
      outputs:
        url: ${{ steps.create_release.outputs.upload_url }} # is this necessary?
      steps:
        - name: Show the version tag (for debugging)
          run: echo "VERSION = $VERSION"
                
        - name: Create a release
          id: create_release
          uses: actions/create-release@v1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          with:
            tag_name: $VERSION
            release_name: $VERSION Release of MXFInspect
            #body_path: CHANGELOG.md
            body: |
              Changes in this Release
              - First Change
              - Second Change
            draft: false
            prerelease: true


  upload_release: 
      name: Upload release artifacts
      needs: do_release
      runs-on: ubuntu-latest
      strategy:
        matrix:
          win-version: [x64, x86]
      steps:
        - name: Download build artifact        
          uses: actions/download-artifact@v2
          with:
              name: my-artifact-${{ matrix.win-version }}

        - name: Show path       
          run: echo ${{ github.workspace }}

        - name: Show path       
          run: ls -lr
        
        - name: Upload build artifacts to release
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ needs.do_release.outputs.url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: ./
            asset_name: my_file${{ matrix.win-version }}.txt
            asset_content_type: text/plain